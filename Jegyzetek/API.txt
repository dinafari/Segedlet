

## DOM (Document Object Model)

A DOM a HTML dokumentum szerkezetét reprezentáló objektumok hierarchiája, amelyen keresztül JavaScript segítségével manipulálhatjuk a weboldal tartalmát és stílusát.

### Elemi kiválasztása

- `getElementById()` – Azonosító alapján
- `getElementsByClassName()` – Osztály alapján
- `getElementsByTagName()` – HTML elemnév alapján
- `querySelector()` – CSS szelektor alapján (első találat)
- `querySelectorAll()` – CSS szelektor alapján (összes találat)

```javascript
const cim = document.getElementById("cim");
const gombok = document.querySelectorAll(".gomb");
```

### DOM Manipuláció

- `innerText` – Szöveg módosítása
- `innerHTML` – HTML tartalom módosítása
- `setAttribute()` – Attribútum módosítása
- `style` – CSS módosítása

```javascript
const cim = document.getElementById("cim");
cim.innerText = "Új cím";
cim.style.color = "red";
```

## Eseménykezelés

Az eseményekre történő reagálás a weboldalon végrehajtott műveletek (pl. kattintás, billentyűleütés) kezelését jelenti.

### Eseménykezelő Hozzáadása

- `addEventListener()` használata

```javascript
const gomb = document.getElementById("gomb");
gomb.addEventListener("click", () => {
  alert("Kattintottál a gombra!");
});
```

### Gyakori eseménytípusok

- `click` – Kattintás
- `mouseover` – Egér fölé mozgatása
- `keydown` – Billentyű lenyomása
- `submit` – Űrlap elküldése

### Űrlapkezelés

```javascript
const urlap = document.getElementById("urlap");

urlap.addEventListener("submit", (event) => {
  event.preventDefault(); // Alapértelmezett viselkedés letiltása
  alert("Űrlap elküldve!");
});
```

## API Hívások JavaScript-ben

### 1. `fetch()` használata (Promise alapú)

A `fetch()` metódus aszinkron HTTP-kérések küldésére szolgál.

#### GET Kérés

```javascript
fetch('https://jsonplaceholder.typicode.com/posts')
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error('Hiba történt:', error));
```

### 2. Aszinkron/Await használata

```javascript
async function lekerdezes() {
  try {
    const response = await fetch('https://jsonplaceholder.typicode.com/users');
    const data = await response.json();
    console.log(data);
  } catch (error) {
    console.error('Hiba:', error);
  }
}

lekerdezes();
```

